package com.buoyancy.notification.messaging.consumer

import io.github.oshai.kotlinlogging.KotlinLogging
import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration
import org.springframework.kafka.listener.KafkaListenerErrorHandler

@Configuration
class ErrorHandlerConfig {

    private val log = KotlinLogging.logger {}

    @Bean
    fun loggingErrorHandler(): KafkaListenerErrorHandler {
        return KafkaListenerErrorHandler { message, exception ->
            log.error {
                """
                [Kafka Listener Error] Failed to process message:
                Headers: ${message.headers.entries.joinToString { "${it.key}=${it.value}" }}
                Payload: ${message.payload}
                Exception Type: ${exception.cause?.javaClass?.simpleName}
                Error Message: ${exception.cause?.message ?: exception.message}
                Stack Trace: ${exception.stackTraceToString()}
                """.trimIndent()
            }
        }
    }
}
