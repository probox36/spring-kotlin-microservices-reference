logging:
  level:
    org:
      springframework: WARN

spring:
  web:
    locale: en_EN
    locale-resolver: fixed

  main:
    allow-circular-references: true

  kafka:
    bootstrap-server: localhost:9092

    consumer:
      bootstrap-servers: ${spring.kafka.bootstrap-server}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: com.buoyancy.*,org.acme,org.springframework
          deserializer:
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      bootstrap-servers: ${spring.kafka.bootstrap-server}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  mail:
    host: smtp.gmail.com
    port: 587
    username: probox36@gmail.com
    #    TODO: Убрать
    password:
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  datasource:
    host: localhost:5432
    database-name: foodtech
    base-url: postgresql://${spring.datasource.host}/${spring.datasource.database-name}
    driver-class-name: org.postgresql.Driver
    username: postgres
    #   TODO: Убрать
    password:
    url: jdbc:${spring.datasource.base-url}
    show-sql: true

  flyway:
    url: jdbc:${spring.datasource.base-url}
    locations: classpath:migration
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}

  data:
    redis:
      host: localhost
      port: 6379
  cache:
    type: redis
    redis:
      timeout: 60s